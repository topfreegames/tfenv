#!/usr/bin/env bash

[ -n "${TFENV_DEBUG}" ] && set -x
source "${TFENV_ROOT}/libexec/helpers"

[ "${#}" -ne 1 ] && error_and_die "usage: tfenv use <version>"

declare version_requested version regex

version_requested="${1}"

if [[ "${version_requested}" =~ ^min-required$ ]]; then
  echo "Detecting minimal required version..."
  found_min_required="$(tfenv-min-required)"

  if [[ $? -eq 0 ]]; then
      echo "Min required version is detected as ${found_min_required}"
      version_requested="${found_min_required}"
  else
    exit 1
  fi
fi

if [[ "${version_requested}" =~ ^latest\:.*$ ]]; then
  version="${version_requested%%\:*}"
  regex="${version_requested##*\:}"
elif [[ "${version_requested}" =~ ^latest$ ]]; then
  version="${version_requested}"
  regex="^[0-9]\+\.[0-9]\+\.[0-9]\+$"
else
  version="${version_requested}"
  regex="^${version_requested}$"
fi

[ -d "${TFENV_CONFIG_DIR}/versions" ] \
  || error_and_die "No versions of terraform installed. Please install one with: tfenv install"

version="$(\ls "${TFENV_CONFIG_DIR}/versions" \
  | sort -t'.' -k 1nr,1 -k 2nr,2 -k 3nr,3 \
  | grep -e "${regex}" \
  | head -n 1
)"

[ -n "${version}" ] || error_and_die "No installed versions of terraform matched '${1}'"

target_path="${TFENV_CONFIG_DIR}/versions/${version}"
[ -f "${target_path}/terraform" ] \
  || error_and_die "Version directory for ${version} is present, but the terraform binary is not! Manual intervention required."
[ -x "${target_path}/terraform" ] \
  || error_and_die "Version directory for ${version} is present, but the terraform binary is not executable! Manual intervention required. "

info "Switching to v${version}"
echo "${version}" > "$(tfenv-version-file)" || error_and_die "'switch to v${version} failed'"
terraform --version 1>/dev/null || error_and_die "'terraform --version' failed. Something is seriously wrong"
info "Switching completed"
